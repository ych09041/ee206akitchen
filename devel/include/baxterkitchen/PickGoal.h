// Generated by gencpp from file baxterkitchen/PickGoal.msg
// DO NOT EDIT!


#ifndef BAXTERKITCHEN_MESSAGE_PICKGOAL_H
#define BAXTERKITCHEN_MESSAGE_PICKGOAL_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace baxterkitchen
{
template <class ContainerAllocator>
struct PickGoal_
{
  typedef PickGoal_<ContainerAllocator> Type;

  PickGoal_()
    : p_x(0.0)
    , p_y(0.0)
    , p_z(0.0)  {
    }
  PickGoal_(const ContainerAllocator& _alloc)
    : p_x(0.0)
    , p_y(0.0)
    , p_z(0.0)  {
  (void)_alloc;
    }



   typedef float _p_x_type;
  _p_x_type p_x;

   typedef float _p_y_type;
  _p_y_type p_y;

   typedef float _p_z_type;
  _p_z_type p_z;




  typedef boost::shared_ptr< ::baxterkitchen::PickGoal_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::baxterkitchen::PickGoal_<ContainerAllocator> const> ConstPtr;

}; // struct PickGoal_

typedef ::baxterkitchen::PickGoal_<std::allocator<void> > PickGoal;

typedef boost::shared_ptr< ::baxterkitchen::PickGoal > PickGoalPtr;
typedef boost::shared_ptr< ::baxterkitchen::PickGoal const> PickGoalConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::baxterkitchen::PickGoal_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::baxterkitchen::PickGoal_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace baxterkitchen

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'actionlib_msgs': ['/opt/ros/indigo/share/actionlib_msgs/cmake/../msg'], 'baxterkitchen': ['/home/cc/ee106a/fa16/class/ee106a-acu/ee206akitchen/devel/share/baxterkitchen/msg'], 'std_msgs': ['/opt/ros/indigo/share/std_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::baxterkitchen::PickGoal_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::baxterkitchen::PickGoal_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::baxterkitchen::PickGoal_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::baxterkitchen::PickGoal_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::baxterkitchen::PickGoal_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::baxterkitchen::PickGoal_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::baxterkitchen::PickGoal_<ContainerAllocator> >
{
  static const char* value()
  {
    return "36648e5f80a68644ee089d750f829141";
  }

  static const char* value(const ::baxterkitchen::PickGoal_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x36648e5f80a68644ULL;
  static const uint64_t static_value2 = 0xee089d750f829141ULL;
};

template<class ContainerAllocator>
struct DataType< ::baxterkitchen::PickGoal_<ContainerAllocator> >
{
  static const char* value()
  {
    return "baxterkitchen/PickGoal";
  }

  static const char* value(const ::baxterkitchen::PickGoal_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::baxterkitchen::PickGoal_<ContainerAllocator> >
{
  static const char* value()
  {
    return "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
#goal definition\n\
float32 p_x\n\
float32 p_y\n\
float32 p_z\n\
";
  }

  static const char* value(const ::baxterkitchen::PickGoal_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::baxterkitchen::PickGoal_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.p_x);
      stream.next(m.p_y);
      stream.next(m.p_z);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct PickGoal_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::baxterkitchen::PickGoal_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::baxterkitchen::PickGoal_<ContainerAllocator>& v)
  {
    s << indent << "p_x: ";
    Printer<float>::stream(s, indent + "  ", v.p_x);
    s << indent << "p_y: ";
    Printer<float>::stream(s, indent + "  ", v.p_y);
    s << indent << "p_z: ";
    Printer<float>::stream(s, indent + "  ", v.p_z);
  }
};

} // namespace message_operations
} // namespace ros

#endif // BAXTERKITCHEN_MESSAGE_PICKGOAL_H
